import{r as s}from"./pkgroll_create-require-f1630a78.mjs";import i from"repl";import{t as n}from"./index-9eae64fa.mjs";import{getFormat as S,globalPreload as V,initialize as k,load as A,resolve as B,transformSource as C}from"./esm/index.mjs";import"module";import"url";import"esbuild";import"crypto";import"fs";import"path";import"os";import"worker_threads";import"./node-features-53cd96d9.mjs";import"./source-map.mjs";import"source-map-support";import"./resolve-ts-path-a8cb04a4.mjs";import"get-tsconfig";function l(r){const{eval:e}=r,a=async function(t,m,o,p){try{t=(await n(t,o,{loader:"ts",tsconfigRaw:{compilerOptions:{preserveValueImports:!0}},define:{require:"global.require"}})).code}catch{}return e.call(this,t,m,o,p)};r.eval=a}const{start:c}=i;i.start=function(){const r=Reflect.apply(c,this,arguments);return l(r),r},s("./cjs/index.cjs");export{S as getFormat,V as globalPreload,k as initialize,A as load,B as resolve,C as transformSource};
