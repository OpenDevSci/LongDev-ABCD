import a from"path";import h from"fs";import i from"module";import{parseTsconfig as S,getTsconfig as j,createFilesMatcher as E,createPathsMatcher as x}from"get-tsconfig";import{installSourceMapSupport as y}from"../source-map.mjs";import{a as O,b as P}from"../index-9eae64fa.mjs";import{r as b}from"../resolve-ts-path-a8cb04a4.mjs";import{a as g,b as N}from"../node-features-53cd96d9.mjs";import"source-map-support";import"url";import"esbuild";import"crypto";import"os";const A=/^\.{1,2}\//,M=/\.[cm]?tsx?$/,R=`${a.sep}node_modules${a.sep}`,m=process.env.ESBK_TSCONFIG_PATH?{path:a.resolve(process.env.ESBK_TSCONFIG_PATH),config:S(process.env.ESBK_TSCONFIG_PATH)}:j(),u=m&&E(m),_=m&&x(m),T=y(),l=i._extensions,I=l[".js"],C=[".js",".cjs",".cts",".mjs",".mts",".ts",".tsx",".jsx"],v=(o,s)=>{if(!C.some(t=>s.endsWith(t)))return I(o,s);process.send&&process.send({type:"dependency",path:s});let e=h.readFileSync(s,"utf8");if(s.endsWith(".cjs")&&N){const t=O(s,e);t&&(e=T(t,s))}else{const t=P(e,s,{tsconfigRaw:u==null?void 0:u(s)});e=T(t,s)}o._compile(e,s)};[".js",".ts",".tsx",".jsx"].forEach(o=>{l[o]=v}),Object.defineProperty(l,".mjs",{value:v,enumerable:!1});const f=i._resolveFilename.bind(i);i._resolveFilename=(o,s,r,e)=>{var t;if(!g&&o.startsWith("node:")&&(o=o.slice(5)),_&&!A.test(o)&&!((t=s==null?void 0:s.filename)!=null&&t.includes(R))){const c=_(o);for(const p of c){const d=F(p,s,r,e);if(d)return d;try{return f(p,s,r,e)}catch{}}}const n=F(o,s,r,e);return n||f(o,s,r,e)};const F=(o,s,r,e)=>{const t=b(o);if(s!=null&&s.filename&&M.test(s.filename)&&t)try{return f(t[0],s,r,e)}catch(n){const{code:c}=n;if(c!=="MODULE_NOT_FOUND"&&c!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw n}};
