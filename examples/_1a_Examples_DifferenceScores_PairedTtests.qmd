---
title: "Difference Scores: Paired Samples T-test"
author: "Biostatistics Working Group"
---

## Overview

<p>

This example assesses growth in a subsample of ABCD participants from Baseline (T0) to the 1-Year follow-up (T1), using weight as a representative metric. The analysis is conducted in two primary steps: 1) a difference score is calculated between baseline and Year_1 weight measurements for each participant; 2) a one-sample t-test is used to test whether the difference score is statistically different than a null hypothesis of zero change. Finally, a visual inspection is further conducted via a scatterplot to graphically represent the relationship between participant's weight at Baseline and Year_1. The ensuing analysis and interpretations are detailed in the subsequent sections.

</p>

## Preliminary Setup

::: panel-tabset
### Install Packages {.tabset .tabset-fade .tabset-pills}

::: blue
> **This code installs the r packages necessary for this example, if
> they are not already installed**

```{r pckg-install}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| output: FALSE

# Create a list of required packages
packages_required <- c("tidyverse", "easystats", "lme4", "gtsummary", "report", "broom", "gridExtra")

# Check which packages are not installed and install them
packages_to_install <- setdiff(packages_required, rownames(installed.packages()))
if (length(packages_to_install) > 0) {
    install.packages(packages_to_install)
}

# Load the required packages
lapply(packages_required, library, character.only = TRUE)

```

:::

### Load Packages

::: blue
**This code loads the r libraries necessary for this example**

```{r lib-load}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| output: FALSE

library(tidyverse) # Collection of R packages for data science
library(easystats) # Collection of R packages statistical modeling, visualization, and reporting
library(gtsummary) # Publication-ready tables
library(report) # Easy reporting of regression analyses
library(broom) # Tidy and augment statistical models output
library(gridExtra) # Arrange multiple grid-based plots on a page

```

:::

### Config Options

::: blue
**This code configures knitr code chunk options**

```{r config}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| output: FALSE

knitr::opts_chunk$set(
    echo = T, message = F, warning = F, error = F,
    comment = NA, cache = T, code_folding = T,
    R.options = list(width = 220, digits = 3),
    fig.align = "center",
    out.width = "75%", fig.asp = .75
)
```

:::

## Descriptives Overview

::: panel-tabset
### Read and View Data {.tabset .tabset-fade .tabset-pills}

```{r}
# Install and load the googledrive package
if (!requireNamespace("googledrive", quietly = TRUE)) install.packages("googledrive")
library(googledrive)

# Authenticate with Google Drive
drive_auth()

# Specify the file ID and the destination path
file_id <- "1_gnaEx0wJ28tT0CD_B6mPFwngdfSb6Dr" # Replace with your actual file ID
dest_file <- "my_data.rds" # Specify your destination path

# Download the file
drive_download(as_id(file_id), path = dest_file, overwrite = TRUE)

# Load the .rds file for analysis
my_data <- readRDS(dest_file)

# Begin your analysis (example: view the first few rows)
head(my_data)

```

:::

<!-- ::: blue
**This code reads in and shows the data to be used in the current
example** -->

<!-- ```{r read-data}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE
#| output: FALSE
#| cache: FALSE

# Set the data paths
data_path_1 <- "/Users/shawes/ABCD/data/rds/abcd_5.0_rds/demo5.0.rds"
data_path_2 <- "/Users/shawes/ABCD/data/rds/abcd_5.0_rds/core-rds-5.0/non-imaging_excluding_nt_5.0.rds"

# Read the data
data_demographics <- readRDS(data_path_1)
data_nonimaging <- readRDS(data_path_2)

# Subset the nonimaging data to include desired variables
selected_vars <- c("src_subject_id", "eventname", "nihtbx_totalcomp_fc", "anthroweightcalc", "anthroweightcalc")
subset_data <- data_nonimaging[, selected_vars]

library(dplyr)
# # Merge the datasets on 'src_subject_id' and 'eventname'
merged_data <- data_demographics %>%
  full_join(subset_data, by = c("src_subject_id", "eventname"))

# Inspect the merged data structure
str(merged_data)

# Define event names to be retained in the analysis and convert variables to appropriate data types
eventnames_to_include <- c("baseline_year_1_arm_1",
                           "1_year_follow_up_y_arm_1",
                           "2_year_follow_up_y_arm_1",
                           "3_year_follow_up_y_arm_1",
                           "4_year_follow_up_y_arm_1")

df <- merged_data %>%
  filter(eventname %in% eventnames_to_include) %>%
  mutate(
    src_subject_id = as.factor(src_subject_id),
    eventname = factor(eventname, levels = eventnames_to_include, ordered = TRUE),
    age = as.numeric(age),
    sex = as.factor(sex),
    race.4level = as.factor(race.4level),
    hisp = as.factor(hisp),
    high.educ.bl = as.factor(high.educ.bl),
    household.income.bl = as.factor(household.income.bl),
    acs_raked_propensity_score = as.numeric(acs_raked_propensity_score),
    rel_family_id.bl = as.factor(rel_family_id.bl),
    site_id_l = as.factor(site_id_l),
    nihtbx_totalcomp_fc = as.numeric(nihtbx_totalcomp_fc),
    anthroweightcalc = as.numeric(anthroweightcalc),
    anthroweightcalc = as.numeric(anthroweightcalc)
  ) %>%
  # Exclude cases from unused assessment waves
  filter(!is.na(eventname))

```
::: -->


----


<!-- ```{r}
# Install and load the googledrive package
if (!requireNamespace("googledrive", quietly = TRUE)) install.packages("googledrive")
library(googledrive)

# Authenticate with Google Drive


# Specify the file ID and the destination path
file_id <- "1_gnaEx0wJ28tT0CD_B6mPFwngdfSb6Dr" # Replace with your actual file ID
dest_file <- "my_data.rds" # Specify your destination path

# Download the file
drive_download(as_id(file_id), path = dest_file, overwrite = TRUE)

# Load the .rds file for analysis
my_data <- readRDS(dest_file)

# Begin your analysis (example: view the first few rows)
head(my_data)

``` -->

```{r}
# Set the URL for the CSV file
file_url <- "https://drive.google.com/file/d/1_gnaEx0wJ28tT0CD_B6mPFwngdfSb6Dr/view?usp=drive_link"

# Set the destination filename
dest_file <- "my_data.rds"

# Download the file
download.file(file_url, destfile = dest_file, mode = "wb")

# Read the CSV file into R
my_data <- readRDS(dest_file)

# Display the first few rows of the data
head(my_data)
```

----


### Descriptives

::: blue
**This code creates a descriptives table**

```

```{r descriptives}
#| echo: TRUE
#| messages: FALSE
#| warning: FALSE

df <- my_data

descriptives_table <- df %>%
    select(eventname, sex, race.4level, hisp, anthroweightcalc) %>%
    mutate(eventname = factor(eventname, labels = c("Baseline", "Year 1", "Year 2", "Year 3", "Year 4"))) %>%
    mutate(sex = factor(sex, labels = c("Female", "Male"))) %>%
    tbl_summary(
        by = eventname,
        missing = "no",
        label = list(
            sex ~ "Sex", race.4level ~ "Race", hisp ~ "Hispanic",
            anthroweightcalc ~ "Weight"
        ),
        statistic = list(all_continuous() ~ "{mean} ({sd}) )", all_categorical() ~ "{p}%"),
    ) %>%
    modify_header(all_stat_cols() ~ "**{level}**<br>N = {n}") %>%
    bold_labels() %>%
    italicize_levels() %>%
    modify_spanning_header(all_stat_cols() ~ "**Assessment Wave**")
theme_gtsummary_compact()

descriptives_table
```

:::
:::

## Results

::: panel-tabset
### Build Model: Step I {.tabset .tabset-fade .tabset-pills}

::: blue
The code snippet below tells R to compute a difference score by subtracting each participant's weight at T1 from their weight at T0. Relevant summary statistics are also provided.

**STEP 1: Compute Difference Score**

```{r build-model-ttest-1}
#| message: FALSE
#| warning: FALSE
#| echo: TRUE
#| class.source: 'fold-hide'

# Function to compute difference scores
compute_difference <- function(df, variable_name) {
    # Define the event names of interest
    baseline_event <- "baseline_year_1_arm_1"
    followup_event <- "1_year_follow_up_y_arm_1"

    # Compute the difference between Baseline and Year 1 data for the given variable
    diff_data <- df %>%
        filter(eventname %in% c(baseline_event, followup_event)) %>% # Filter for specific event names
        select(src_subject_id, eventname, all_of(variable_name)) %>% # Select required columns
        spread(eventname, variable_name) %>% # Convert data from long to wide format
        mutate(diff = get(followup_event) - get(baseline_event)) %>% # Compute difference between the two time points
        mutate(group_resid = (diff) - mean(diff)) %>% # compute residuals (group_resid).
        drop_na(diff) # Exclude rows with NA in the computed difference

    # Summarize the computed difference scores
    diff_summary <- summary(diff_data$diff)

    # Return the difference data and its summary
    list(data = diff_data, summary = diff_summary)
}

# List of variables for which difference scores are to be computed
variables_of_interest <- c("anthroweightcalc")

# Compute and store difference scores and summaries for each variable in a list
difference_and_summary_list <- lapply(variables_of_interest, function(var) {
    compute_difference(df, var)
})

# Extract the difference data for the 'anthroweightcalc' variable
weight_diff_data <- difference_and_summary_list[[1]]$data

# Merge the 'diff' column back to the main df using 'src_subject_id' as the key
df <- left_join(df, weight_diff_data %>% select(src_subject_id, diff), by = "src_subject_id")

```




